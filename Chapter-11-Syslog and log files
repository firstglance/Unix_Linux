#系统守护进程、内核和各种工具和服务都会产生一些数据，这些数据都被记录下来，最终都会保存在容量有限的硬盘上。
#有经验的系统管理员认为复查日志宜早不宜迟。日常文件往往能保留很多线索，这些线索可以引导系统管理员解决许多引起麻烦的配置问题。
#当一个守护进程拒绝启动或者在系统引导时连续出现错误，首先就要检查日志。
syslog有两项重要的功能：使程序员从繁重、机械的编写日志文件代码的工作中解脱出来；使管理员更好地控制日志的记录过程。
在出现syslog之前，每个程序都有自己的日志记录策略。系统管理员对保存什么信息或是信息保存在哪儿没有控制权。
syslog相当灵活，它能让消息按照其来源和重要性（“严重性级别”）来排序，也能把消息送到各种目的地：日志文件、用户的终端，或者甚至是别的计算机。
syslog集中管理网络日志的功能是它最有价值的特性之一。
syslog体系结构：
syslog包括3个部分：
syslogd，日志守护进程（机器配置文件/etc/syslog.conf）
openlog等，将消息提交给syslogd的库例程；
logger，一条从shell提交日志记录项的用户级命令。
syslogd在系统引导时启动并连续执行，它不能用inetd来管理。
懂得syslog的程序把日志项（使用syslog库例程）写到专门的文件/dev/log中，这是一个UNIX的域套接口。syslogd从这个文件中读取消息，参考其配置文件，
将各条消息分发到合适的目的地。挂起信号（HUP）可以让syslogd关闭它的日志文件，重新读取它的配置文件，并再度开始日志记录。如果修改了/etc/syslog.conf,
那么必须向syslogd发送一个挂起信号，来使修改生效。TERM信号将使syslogd退出。
syslogd将它的进程ID写入到文件/var/run/(在AIX使/etc)下的一个文件里。这一约定使得从一个脚本向syslogd发送信号变得比较容易。
